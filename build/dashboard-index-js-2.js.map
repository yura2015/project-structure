{"version":3,"sources":["webpack:///./src/components/column-chart/index.js","webpack:///./src/pages/dashboard/bestsellers-header.js","webpack:///./src/pages/dashboard/index.js","webpack:///./src/utils/fetch-json.js","webpack:///./src/components/sortable-table/index.js","webpack:///./src/components/range-picker/index.js"],"names":["ColumnChart","constructor","label","link","formatHeading","data","url","range","from","Date","to","this","URL","render","element","document","createElement","innerHTML","template","firstElementChild","subElements","getSubElements","loadData","getHeaderValue","Object","values","reduce","accum","item","classList","add","header","textContent","body","searchParams","set","toISOString","fetchJson","setNewRange","length","getColumnBody","remove","maxValue","Math","max","entries","map","key","value","scale","chartHeight","percent","toFixed","tooltip","toLocaleString","dateStyle","floor","join","getLink","querySelectorAll","subElement","dataset","destroy","id","title","sortable","sortType","Page","components","SortableTable","addRows","ordersChart","update","salesChart","customsChart","initComponents","now","setMonth","getMonth","rangePicker","RangePicker","sortableTable","isSortlocaly","customersChart","randerComponents","keys","forEach","component","root","append","initEventListener","addEventListener","event","detail","updateComponents","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","status","Error","super","window","reason","alert","headersConfig","sorted","find","order","isSortLocally","step","start","end","async","bottom","getBoundingClientRect","documentElement","clientHeight","loading","updateBody","column","target","closest","newOrder","asc","desc","toggleOrder","arrow","sortLocally","sortOnServer","wrapper","getTable","renderRows","initEventListeners","getTableRows","rows","childNodes","getTableHeader","getHeaderRow","getHeaderSortingArrow","getTableBody","getTableRow","onSortClick","onWindowScroll","sortedData","sortData","arr","customSorting","direction","sort","a","b","localeCompare","removeEventListener","date","isOpen","contains","isRangePicker","close","showDateFrom","selected","formatDate","input","selector","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","showDate1","showDate2","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","cellDate","selectedFromElem","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles"],"mappings":"4RAGe,MAAMA,EAKnBC,aAAY,MACVC,EAAQ,GADE,KAEVC,EAAO,GAFG,cAGVC,EAAgBC,IAAQA,GAHd,IAIVC,EAAM,GAJI,MAKVC,EAAQ,CACNC,KAAM,IAAIC,KACVC,GAAI,IAAID,OAER,IAAI,8CAZM,IAYN,qBAXM,IAYZE,KAAKL,IAAM,IAAIM,IAAIN,EAhBF,oCAiBjBK,KAAKJ,MAAQA,EACbI,KAAKT,MAAQA,EACbS,KAAKR,KAAOA,EACZQ,KAAKP,cAAgBA,EAErBO,KAAKE,SAGPA,SACE,MAAM,KAAEL,EAAF,GAAQE,GAAOC,KAAKJ,MACpBO,EAAUC,SAASC,cAAc,OAEvCF,EAAQG,UAAYN,KAAKO,SAEzBP,KAAKG,QAAUA,EAAQK,kBACvBR,KAAKS,YAAcT,KAAKU,eAAeV,KAAKG,SAE5CH,KAAKW,SAASd,EAAME,GAGtBa,eAAelB,GACb,OAAOM,KAAKP,cAAcoB,OAAOC,OAAOpB,GAAMqB,OAAO,CAACC,EAAOC,IAAUD,EAAQC,EAAO,IAGxF,eAAepB,EAAME,GACnBC,KAAKG,QAAQe,UAAUC,IAAI,wBAC3BnB,KAAKS,YAAYW,OAAOC,YAAc,GACtCrB,KAAKS,YAAYa,KAAKhB,UAAY,GAElCN,KAAKL,IAAI4B,aAAaC,IAAI,OAAQ3B,EAAK4B,eACvCzB,KAAKL,IAAI4B,aAAaC,IAAI,KAAMzB,EAAG0B,eAEnC,MAAM/B,QAAagC,YAAU1B,KAAKL,KAElCK,KAAK2B,YAAY9B,EAAME,GAEnBL,GAAQmB,OAAOC,OAAOpB,GAAMkC,SAC9B5B,KAAKS,YAAYW,OAAOC,YAAcrB,KAAKY,eAAelB,GAC1DM,KAAKS,YAAYa,KAAKhB,UAAYN,KAAK6B,cAAcnC,GAErDM,KAAKG,QAAQe,UAAUY,OAAO,yBAIlCH,YAAY9B,EAAME,GAChBC,KAAKJ,MAAMC,KAAOA,EAClBG,KAAKJ,MAAMG,GAAKA,EAGlB8B,cAAcnC,GACZ,MAAMqC,EAAWC,KAAKC,OAAOpB,OAAOC,OAAOpB,IAE3C,OAAOmB,OAAOqB,QAAQxC,GAAMyC,IAAI,EAAEC,EAAKC,MACrC,MAAMC,EAAQtC,KAAKuC,YAAcR,EAC3BS,GAAWH,EAAQN,EAAW,KAAKU,QAAQ,GAC3CC,EAAW,0BACNN,EAAIO,eAAe,UAAW,CAACC,UAAW,qDAEzCJ,6BAGZ,MAAQ,wBAAuBR,KAAKa,MAAMR,EAAQC,qBAAyBI,cAC1EI,KAAK,IAGVC,UACE,OAAO/C,KAAKR,KAAQ,uCAAsCQ,KAAKR,qBAAuB,GAGxF,eACE,MAAQ,iFACkEQ,KAAKuC,6EAEjEvC,KAAKT,oBACXS,KAAK+C,gQAUfrC,eAAeP,GAGb,MAAO,IAFUA,EAAQ6C,iBAAiB,mBAErBjC,OAAO,CAACC,EAAOiC,KAClCjC,EAAMiC,EAAWC,QAAQ/C,SAAW8C,EAE7BjC,GACN,IAGL,aAAanB,EAAME,GACjB,aAAaC,KAAKW,SAASd,EAAME,GAGnCoD,UACEnD,KAAKG,QAAQ2B,UC1EFV,MA5CA,CACb,CACEgC,GAAI,SACJC,MAAO,QACPC,UAAU,EACV/C,SAAUb,GACA,kHAEmDA,EAAK,GAAGC,qCAKvE,CACEyD,GAAI,QACJC,MAAO,OACPC,UAAU,EACVC,SAAU,UAEZ,CACEH,GAAI,WACJC,MAAO,WACPC,UAAU,EACVC,SAAU,UAEZ,CACEH,GAAI,QACJC,MAAO,QACPC,UAAU,EACVC,SAAU,UAEZ,CACEH,GAAI,SACJC,MAAO,SACPC,UAAU,EACVC,SAAU,SACVhD,SAAUb,GACA,iDACFA,EAAO,EAAI,SAAW,+B,wHC7BnB,MAAM8D,EAAK,4DAER,IAFQ,oBAGT,IAEb,uBAAuB3D,EAAME,GAC5B,IAAIE,IAAIN,IARQ,oCASb,MAAMD,QAAagC,YAAW,IAAIzB,IAAK,4BAT1B,qCAUbD,KAAKyD,WAAWC,cAAcC,QAAQjE,GACtCM,KAAKyD,WAAWG,YAAYC,OAAOhE,EAAKE,GACxCC,KAAKyD,WAAWK,WAAWD,OAAOhE,EAAKE,GACvCC,KAAKyD,WAAWM,aAAaF,OAAOhE,EAAKE,GAG9CiE,iBACK,MAAMC,EAAM,IAAInE,KACVC,EAAK,IAAID,KACTD,EAAO,IAAIC,KAAMmE,EAAIC,SAAUD,EAAIE,WAAa,IAChDC,EAAc,IAAIC,IAAa,CAACxE,OAAME,OAEtCuE,EAAgB,IAAIZ,IAActC,EAAQ,CAC5CzB,IAAM,4BACN4E,cAAc,IAGZX,EAAc,IAAIvE,EAAa,CACjCM,IAAM,uBACNC,MAAO,CAAEC,OAAME,MACfR,MAAO,WAELuE,EAAa,IAAIzE,EAAa,CAChCM,IAAM,sBACNC,MAAO,CAAEC,OAAME,MACfR,MAAO,WAGNiF,EAAiB,IAAInF,EAAa,CACnCM,IAAM,0BACNC,MAAO,CAAEC,OAAME,MACfR,MAAO,WAGXS,KAAKyD,WAAa,CACdW,cACAE,gBACAV,cACAE,aACAU,kBAMRC,mBACI5D,OAAO6D,KAAK1E,KAAKyD,YAAYkB,QAAQC,IACjC,MAAMC,EAAO7E,KAAKS,YAAYmE,IACxB,QAAEzE,GAAYH,KAAKyD,WAAWmB,GAEpCC,EAAKC,OAAO3E,KAIpB,eACI,MAAQ,o5BAmBXD,SAUG,OARAF,KAAKG,QAAUC,SAASC,cAAc,OACtCL,KAAKG,QAAQG,UAAYN,KAAKO,SAC9BP,KAAKG,QAAUH,KAAKG,QAAQK,kBAC5BR,KAAKS,YAAcT,KAAKU,eAAeV,KAAKG,SAE5CH,KAAKgE,iBACLhE,KAAKyE,mBACLzE,KAAK+E,oBACE/E,KAAKG,QAGfO,eAAeP,GAGX,MAAO,IAFUA,EAAQ6C,iBAAiB,mBAErBjC,OAAO,CAACC,EAAOiC,KACnCjC,EAAMiC,EAAWC,QAAQ/C,SAAW8C,EAE7BjC,GACN,IAGN+D,oBACI/E,KAAKyD,WAAWW,YAAYjE,QAAQ6E,iBAAiB,cAAeC,IACjE,MAAM,KAACpF,EAAD,GAAOE,GAAOkF,EAAMC,OAC1BlF,KAAKmF,iBAAiBtF,EAAME,KAKlC+B,SACM9B,KAAKG,SACLH,KAAKG,QAAQ2B,SAKnBqB,UACEnD,KAAK8B,SACL,IAAI,MAAM8C,KAAa5E,KAAKyD,WACxBzD,KAAKyD,WAAWmB,GAAWzB,UAE/BnD,KAAKG,QAAU,KACfH,KAAKS,YAAc,M,iCCnIZ,mBAAed,EAAKyF,GACjC,IAAIC,EASA/D,EAPJ,IAEE+D,QAAiBC,MAAM3F,EAAI4F,WAAYH,GACvC,MAAMI,GACN,MAAM,IAAIC,EAAWJ,EAAU,+BAKjC,IAAKA,EAASK,GAAI,CAChB,IAAIC,EAAYN,EAASO,WAEzB,IACEtE,QAAa+D,EAASQ,OAEtBF,EAAarE,EAAKwE,OAASxE,EAAKwE,MAAMC,SAAazE,EAAK5B,MAAQ4B,EAAK5B,KAAKoG,OAASxE,EAAK5B,KAAKoG,MAAMC,SAAYJ,EAC/G,MAAOG,IAET,IAAIC,EAAW,SAAQV,EAASW,WAAWL,IAE3C,MAAM,IAAIF,EAAWJ,EAAU/D,EAAMyE,GAGvC,IACE,aAAaV,EAASQ,OACtB,MAAML,GACN,MAAM,IAAIC,EAAWJ,EAAU,KAAMG,EAAIO,WAItC,MAAMN,UAAmBQ,MAG9B3G,YAAY+F,EAAU/D,EAAMyE,G,UAC1BG,MAAMH,G,EAHD,c,EAE8B,U,EAAA,M,sFAEnC/F,KAAKqF,SAAWA,EAChBrF,KAAKsB,KAAOA,GAKhB6E,OAAOnB,iBAAiB,qBAAsBC,IACxCA,EAAMmB,kBAAkBX,GAC1BY,MAAMpB,EAAMmB,OAAOL,Y,mMC9CR,MAAMrC,EA0DnBpE,YAAYgH,EAAgB,IAAI,IAC9B3G,EAAM,GADwB,OAE9B4G,EAAS,CACPnD,GAAIkD,EAAcE,KAAKvF,GAAQA,EAAKqC,UAAUF,GAC9CqD,MAAO,OAJqB,cAM9BC,GAAgB,EANc,KAO9BC,EAAO,GAPuB,MAQ9BC,EAAQ,EARsB,IAS9BC,EAAMD,EAAQD,GACZ,IAAI,8CAlEM,IAkEN,cAjED,IAiEC,kBAhEE,GAgEF,cA/DD,IA+DC,eA9DA,GA8DA,aA7DF3G,KAAK4G,MAAQ5G,KAAK2G,MA6DhB,wBA3DSG,UACf,MAAM,OAAEC,GAAW/G,KAAKG,QAAQ6G,yBAC1B,GAAE5D,EAAF,MAAMqD,GAAUzG,KAAKuG,OAE3B,GAAIQ,EAAS3G,SAAS6G,gBAAgBC,eAAiBlH,KAAKmH,UAAYnH,KAAK0G,cAAe,CAC1F1G,KAAK4G,MAAQ5G,KAAK6G,IAClB7G,KAAK6G,IAAM7G,KAAK4G,MAAQ5G,KAAK2G,KAE7B3G,KAAKmH,SAAU,EAEf,MAAMzH,QAAaM,KAAKW,SAASyC,EAAIqD,EAAOzG,KAAK4G,MAAO5G,KAAK6G,KAE7D7G,KAAKoH,WAAW1H,GAEhBM,KAAKmH,SAAU,KA6CX,qBAzCMlC,IACZ,MAAMoC,EAASpC,EAAMqC,OAAOC,QAAQ,0BAUpC,GAAIF,EAAQ,CACV,MAAM,GAAEjE,EAAF,MAAMqD,GAAUY,EAAOnE,QACvBsE,EAXYf,KACH,CACbgB,IAAK,OACLC,KAAM,OAGMjB,IAKGkB,CAAYlB,GAE7BzG,KAAKuG,OAAS,CACZnD,KACAqD,MAAOe,GAGTH,EAAOnE,QAAQuD,MAAQe,EACvBH,EAAOvC,OAAO9E,KAAKS,YAAYmH,OAE3B5H,KAAK0G,cACP1G,KAAK6H,YAAYzE,EAAIoE,GAErBxH,KAAK8H,aAAa1E,EAAIoE,EAAU,EAAG,EAAIxH,KAAK2G,SAiBhD3G,KAAKsG,cAAgBA,EACrBtG,KAAKL,IAAM,IAAIM,IAAIN,EAzEF,oCA0EjBK,KAAKuG,OAASA,EACdvG,KAAK0G,cAAgBA,EACrB1G,KAAK2G,KAAOA,EACZ3G,KAAK4G,MAAQA,EACb5G,KAAK6G,IAAMA,EAEX7G,KAAKE,SACLF,KAAK6D,SAGP3D,SACE,MAAM6H,EAAU3H,SAASC,cAAc,OAEvC0H,EAAQzH,UAAYN,KAAKgI,SAAS,IAElC,MAAM7H,EAAU4H,EAAQvH,kBAExBR,KAAKG,QAAUA,EACfH,KAAKS,YAAcT,KAAKU,eAAeP,GAGzC,eACE,MAAM,GAACiD,EAAD,MAAKqD,GAASzG,KAAKuG,OACzBvG,KAAKN,WAAaM,KAAKW,SAASyC,EAAIqD,EAAOzG,KAAK4G,MAAO5G,KAAK6G,KAE5D7G,KAAKiI,WAAW,IAAIjI,KAAKN,OACzBM,KAAKkI,qBAGPvE,QAAQjE,GAENM,KAAKS,YAAYa,KAAKhB,UAAYN,KAAKmI,aAAazI,GAGtD0H,WAAW1H,GACT,MAAM0I,EAAOhI,SAASC,cAAc,OAEpCX,EAAO,IAAIM,KAAKN,QAASA,GACzB0I,EAAK9H,UAAYN,KAAKmI,aAAazI,GAEnCM,KAAKS,YAAYa,KAAKwD,UAAUsD,EAAKC,YAIvC,eAAejF,EAAIqD,EAAOG,EAAQ5G,KAAK4G,MAAOC,EAAM7G,KAAK6G,KACvD7G,KAAKL,IAAI4B,aAAaC,IAAI,QAAS4B,GACnCpD,KAAKL,IAAI4B,aAAaC,IAAI,SAAUiF,GACpCzG,KAAKL,IAAI4B,aAAaC,IAAI,SAAUoF,GACpC5G,KAAKL,IAAI4B,aAAaC,IAAI,OAAQqF,GAElC7G,KAAKG,QAAQe,UAAUC,IAAI,0BAE3B,MAAMzB,QAAagC,YAAU1B,KAAKL,KAGlC,OADAK,KAAKG,QAAQe,UAAUY,OAAO,0BACvBpC,EAGT4I,iBACE,MAAQ,yFACJtI,KAAKsG,cAAcnE,IAAIlB,GAAQjB,KAAKuI,aAAatH,IAAO6B,KAAK,kBAInEyF,cAAa,GAACnF,EAAD,MAAKC,EAAL,SAAYC,IAGvB,MAAQ,sDACuCF,qBAAsBE,kBAHvDtD,KAAKuG,OAAOnD,KAAOA,EAAKpD,KAAKuG,OAAOE,MAAQ,0BAI9CpD,qBACNrD,KAAKwI,sBAAsBpF,yBAKnCoF,sBAAsBpF,GAGpB,OAFqBpD,KAAKuG,OAAOnD,KAAOA,EAAKpD,KAAKuG,OAAOE,MAAQ,IAG5D,8HAGD,GAGNgC,aAAa/I,GACX,MAAQ,2EAEFM,KAAKmI,aAAazI,mBAI1ByI,aAAazI,GACX,OAAOA,EAAKyC,IAAIlB,GAAS,sDAEnBjB,KAAK0I,YAAYzH,EAAMvB,oBAE3BoD,KAAK,IAGT4F,YAAYzH,GAQV,OAPcjB,KAAKsG,cAAcnE,IAAI,EAAEiB,KAAI7C,eAClC,CACL6C,KACA7C,cAIS4B,IAAI,EAAEiB,KAAI7C,cACdA,EACHA,EAASU,EAAKmC,IACb,qCAAoCnC,EAAKmC,YAC7CN,KAAK,IAGVkF,SAAStI,EAAK,IACZ,MAAQ,iDAEFM,KAAKsI,6BACLtI,KAAKyI,aAAa/I,iPAQ1BwI,qBACElI,KAAKS,YAAYW,OAAO4D,iBAAiB,cAAehF,KAAK2I,aAE7DvI,SAAS4E,iBAAiB,SAAUhF,KAAK4I,gBAG3Cf,YAAYzE,EAAIqD,GACd,MAAMoC,EAAa7I,KAAK8I,SAAS1F,EAAIqD,GAErCzG,KAAKS,YAAYa,KAAKhB,UAAYN,KAAKyI,aAAaI,GAGtD,mBAAmBzF,EAAIqD,EAAOG,EAAOC,GACnC,MAAMnH,QAAaM,KAAKW,SAASyC,EAAIqD,EAAOG,EAAOC,GAEnD7G,KAAKiI,WAAWvI,GAGlBuI,WAAWvI,GACLA,EAAKkC,QACP5B,KAAKG,QAAQe,UAAUY,OAAO,wBAC9B9B,KAAK2D,QAAQjE,IAEbM,KAAKG,QAAQe,UAAUC,IAAI,wBAI/B2H,SAAS1F,EAAIqD,GACX,MAAMsC,EAAM,IAAI/I,KAAKN,MACf2H,EAASrH,KAAKsG,cAAcE,KAAKvF,GAAQA,EAAKmC,KAAOA,IACrD,SAACG,EAAD,cAAWyF,GAAiB3B,EAC5B4B,EAAsB,QAAVxC,EAAkB,GAAK,EAEzC,OAAOsC,EAAIG,KAAK,CAACC,EAAGC,KAClB,OAAQ7F,GACR,IAAK,SACH,OAAO0F,GAAaE,EAAE/F,GAAMgG,EAAEhG,IAChC,IAAK,SACH,OAAO6F,EAAYE,EAAE/F,GAAIiG,cAAcD,EAAEhG,GAAK,MAChD,IAAK,SACH,OAAO6F,EAAYD,EAAcG,EAAGC,GACtC,QACE,OAAOH,GAAaE,EAAE/F,GAAMgG,EAAEhG,OAKpC1C,eAAeP,GAGb,MAAO,IAFUA,EAAQ6C,iBAAiB,mBAErBjC,OAAO,CAACC,EAAOiC,KAClCjC,EAAMiC,EAAWC,QAAQ/C,SAAW8C,EAE7BjC,GACN,IAGLc,SACE9B,KAAKG,QAAQ2B,SAGfqB,UACEnD,KAAK8B,SACL9B,KAAKS,YAAc,GACnBL,SAASkJ,oBAAoB,SAAUtJ,KAAK4I,mB,uLC3QjC,MAAMvE,EASnB,kBAAkBkF,GAChB,OAAOA,EAAK5G,eAAe,KAAM,CAACC,UAAW,UAY/CtD,aAAY,KAACO,EAAO,IAAIC,KAAZ,GAAoBC,EAAK,IAAID,MAAU,IAAI,iBArB7C,MAqB6C,qBApBzC,IAoByC,wBAnBvC,GAmBuC,kBAlB5C,CACTD,KAAM,IAAIC,KACVC,GAAI,IAAID,OAgB6C,yBATrCmF,IAChB,MAAMuE,EAASxJ,KAAKG,QAAQe,UAAUuI,SAAS,oBACzCC,EAAgB1J,KAAKG,QAAQsJ,SAASxE,EAAMqC,QAE9CkC,IAAWE,GACb1J,KAAK2J,UAKP3J,KAAK4J,aAAe,IAAI9J,KAAKD,GAC7BG,KAAK6J,SAAW,CAAChK,OAAME,MAEvBC,KAAKE,SAGP,eAIE,MAAQ,6HAHKmE,EAAYyF,WAAW9J,KAAK6J,SAAShK,mDACvCwE,EAAYyF,WAAW9J,KAAK6J,SAAS9J,gHAWlDG,SACE,MAAMC,EAAUC,SAASC,cAAc,OAEvCF,EAAQG,UAAYN,KAAKO,SAEzBP,KAAKG,QAAUA,EAAQK,kBACvBR,KAAKS,YAAcT,KAAKU,eAAeP,GAEvCH,KAAKkI,qBAGPxH,eAAeP,GACb,MAAMM,EAAc,GAEpB,IAAK,MAAMwC,KAAc9C,EAAQ6C,iBAAiB,kBAChDvC,EAAYwC,EAAWC,QAAQ/C,SAAW8C,EAG5C,OAAOxC,EAGTyH,qBACE,MAAM,MAAC6B,EAAD,SAAQC,GAAYhK,KAAKS,YAE/BL,SAAS4E,iBAAiB,QAAShF,KAAKiK,iBAAiB,GACzDF,EAAM/E,iBAAiB,QAAS,IAAMhF,KAAKkK,UAC3CF,EAAShF,iBAAiB,QAASC,GAASjF,KAAKmK,gBAAgBlF,IAGnEiF,SACElK,KAAKG,QAAQe,UAAUgJ,OAAO,oBAC9BlK,KAAKoK,wBAGPD,iBAAgB,OAAC7C,IACXA,EAAOpG,UAAUuI,SAAS,sBAC5BzJ,KAAKqK,uBAAuB/C,GAIhCqC,QACE3J,KAAKG,QAAQe,UAAUY,OAAO,oBAGhCsI,wBACE,MAAME,EAAY,IAAIxK,KAAKE,KAAK4J,cAC1BW,EAAY,IAAIzK,KAAKE,KAAK4J,eAC1B,SAAEI,GAAahK,KAAKS,YAE1B8J,EAAUrG,SAASqG,EAAUpG,WAAa,GAE1C6F,EAAS1J,UAAa,+LAIlBN,KAAKwK,eAAeF,aACpBtK,KAAKwK,eAAeD,WAGxB,MAAME,EAAcT,EAASU,cAAc,uCACrCC,EAAeX,EAASU,cAAc,wCAE5CD,EAAYzF,iBAAiB,QAAS,IAAMhF,KAAK4K,QACjDD,EAAa3F,iBAAiB,QAAS,IAAMhF,KAAK6K,QAElD7K,KAAK8K,kBAGPF,OACE5K,KAAK4J,aAAa1F,SAASlE,KAAK4J,aAAazF,WAAa,GAC1DnE,KAAKoK,wBAGPS,OACE7K,KAAK4J,aAAa1F,SAASlE,KAAK4J,aAAazF,WAAa,GAC1DnE,KAAKoK,wBAGPU,kBACE,MAAM,KAAEjL,EAAF,GAAQE,GAAOC,KAAK6J,SAE1B,IAAK,MAAMkB,KAAQ/K,KAAKG,QAAQ6C,iBAAiB,sBAAuB,CACtE,MAAM,MAAEX,GAAU0I,EAAK7H,QACjB8H,EAAW,IAAIlL,KAAKuC,GAE1B0I,EAAK7J,UAAUY,OAAO,8BACtBiJ,EAAK7J,UAAUY,OAAO,iCACtBiJ,EAAK7J,UAAUY,OAAO,4BAElBjC,GAAQwC,IAAUxC,EAAK4B,cACzBsJ,EAAK7J,UAAUC,IAAI,8BACVpB,GAAMsC,IAAUtC,EAAG0B,cAC5BsJ,EAAK7J,UAAUC,IAAI,4BACVtB,GAAQE,GAAMiL,GAAYnL,GAAQmL,GAAYjL,GACvDgL,EAAK7J,UAAUC,IAAI,iCAIvB,GAAItB,EAAM,CACR,MAAMoL,EAAmBjL,KAAKG,QAAQuK,cAAe,gBAAe7K,EAAK4B,mBACrEwJ,GACFA,EAAiB1D,QAAQ,sBAAsBrG,UAAUC,IAAI,8BAIjE,GAAIpB,EAAI,CACN,MAAMmL,EAAiBlL,KAAKG,QAAQuK,cAAe,gBAAe3K,EAAG0B,mBACjEyJ,GACFA,EAAe3D,QAAQ,sBAAsBrG,UAAUC,IAAI,6BAKjEqJ,eAAeW,GACb,MAAM5B,EAAO,IAAIzJ,KAAKqL,GAMtB5B,EAAK6B,QAAQ,GAGb,MAAMC,EAAW9B,EAAK5G,eAAe,KAAM,CAAC2I,MAAO,SAEnD,IAAIC,EAAS,iHAEQF,KAAYA,4OAZPG,MAgC1B,IAVAD,GAAU,yFAGQhC,EAAK9H,gDAzBG+J,EA0BmBjC,EAAKkC,SAxBjC,GADY,IAAbD,EAAiB,EAAKA,EAAW,mBA0BzCjC,EAAKmC,6BAGbnC,EAAK6B,QAAQ,GAEN7B,EAAKpF,aAAegH,EAAShH,YAClCoH,GAAU,+FAGQhC,EAAK9H,gCACf8H,EAAKmC,+BAGbnC,EAAK6B,QAAQ7B,EAAKmC,UAAY,GAMhC,OAFAH,GAAS,eAEFA,EAGTlB,uBAAuB/C,GACrB,MAAM,MAAEjF,GAAUiF,EAAOpE,QAEzB,GAAIb,EAAO,CACT,MAAMsJ,EAAY,IAAI7L,KAAKuC,GAEvBrC,KAAK4L,eACP5L,KAAK6J,SAAW,CACdhK,KAAM8L,EACN5L,GAAI,MAENC,KAAK4L,eAAgB,EACrB5L,KAAK8K,oBAEDa,EAAY3L,KAAK6J,SAAShK,KAC5BG,KAAK6J,SAAS9J,GAAK4L,GAEnB3L,KAAK6J,SAAS9J,GAAKC,KAAK6J,SAAShK,KACjCG,KAAK6J,SAAShK,KAAO8L,GAGvB3L,KAAK4L,eAAgB,EACrB5L,KAAK8K,mBAGH9K,KAAK6J,SAAShK,MAAQG,KAAK6J,SAAS9J,KACtCC,KAAK6L,gBACL7L,KAAK2J,QACL3J,KAAKS,YAAYZ,KAAKS,UAAY+D,EAAYyF,WAAW9J,KAAK6J,SAAShK,MACvEG,KAAKS,YAAYV,GAAGO,UAAY+D,EAAYyF,WAAW9J,KAAK6J,SAAS9J,MAK3E8L,gBACE7L,KAAKG,QAAQ0L,cAAc,IAAIC,YAAY,cAAe,CACxDC,SAAS,EACT7G,OAAQlF,KAAK6J,YAIjB/H,SACM9B,KAAKG,SACLH,KAAKG,QAAQ2B,SAGjB1B,SAASkJ,oBAAoB,QAAStJ,KAAKiK,iBAAiB,GAG9D9G,UAUE,OATAnD,KAAK8B,SACL9B,KAAKG,QAAU,KACfH,KAAKS,YAAc,GACnBT,KAAK4L,eAAgB,EACrB5L,KAAK6J,SAAW,CACdhK,KAAM,IAAIC,KACVC,GAAI,IAAID,MAGHE","file":"dashboard-index-js-2.js","sourcesContent":["\r\nimport fetchJson from '../../utils/fetch-json.js';\r\nconst BACKEND_URL = `${process.env.BACKEND_URL}`; \r\nexport default class ColumnChart {\r\n  element;\r\n  subElements = {};\r\n  chartHeight = 50;\r\n\r\n  constructor({\r\n    label = '',\r\n    link = '',\r\n    formatHeading = data => data,\r\n    url = '',\r\n    range = {\r\n      from: new Date(),\r\n      to: new Date(),\r\n    }\r\n  } = {}) {\r\n    this.url = new URL(url, BACKEND_URL);\r\n    this.range = range;\r\n    this.label = label;\r\n    this.link = link;\r\n    this.formatHeading = formatHeading;\r\n\r\n    this.render();\r\n  }\r\n\r\n  render() {\r\n    const { from, to } = this.range;\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    this.loadData(from, to);\r\n  }\r\n\r\n  getHeaderValue(data) {\r\n    return this.formatHeading(Object.values(data).reduce((accum, item) => (accum + item), 0));\r\n  }\r\n\r\n  async loadData(from, to) {\r\n    this.element.classList.add('column-chart_loading');\r\n    this.subElements.header.textContent = '';\r\n    this.subElements.body.innerHTML = '';\r\n\r\n    this.url.searchParams.set('from', from.toISOString());\r\n    this.url.searchParams.set('to', to.toISOString());\r\n\r\n    const data = await fetchJson(this.url);\r\n\r\n    this.setNewRange(from, to);\r\n\r\n    if (data && Object.values(data).length) {\r\n      this.subElements.header.textContent = this.getHeaderValue(data);\r\n      this.subElements.body.innerHTML = this.getColumnBody(data);\r\n\r\n      this.element.classList.remove('column-chart_loading');\r\n    }\r\n  }\r\n\r\n  setNewRange(from, to) {\r\n    this.range.from = from;\r\n    this.range.to = to;\r\n  }\r\n\r\n  getColumnBody(data) {\r\n    const maxValue = Math.max(...Object.values(data));\r\n\r\n    return Object.entries(data).map(([key, value]) => {\r\n      const scale = this.chartHeight / maxValue;\r\n      const percent = (value / maxValue * 100).toFixed(0);\r\n      const tooltip = `<span>\r\n        <small>${key.toLocaleString('default', {dateStyle: 'medium'})}</small>\r\n        <br>\r\n        <strong>${percent}%</strong>\r\n      </span>`;\r\n\r\n      return `<div style=\"--value: ${Math.floor(value * scale)}\" data-tooltip=\"${tooltip}\"></div>`;\r\n    }).join('');\r\n  }\r\n\r\n  getLink() {\r\n    return this.link ? `<a class=\"column-chart__link\" href=\"${this.link}\">View all</a>` : '';\r\n  }\r\n\r\n  get template() {\r\n    return `\r\n      <div class=\"column-chart column-chart_loading\" style=\"--chart-height: ${this.chartHeight}\">\r\n        <div class=\"column-chart__title\">\r\n          Total ${this.label}\r\n          ${this.getLink()}\r\n        </div>\r\n        <div class=\"column-chart__container\">\r\n          <div data-element=\"header\" class=\"column-chart__header\"></div>\r\n          <div data-element=\"body\" class=\"column-chart__chart\"></div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  async update(from, to) {\r\n    return await this.loadData(from, to);\r\n  }\r\n\r\n  destroy() {\r\n    this.element.remove();\r\n  }\r\n}\r\n","const header = [\r\n  {\r\n    id: 'images',\r\n    title: 'Image',\r\n    sortable: false,\r\n    template: data => {\r\n      return `\r\n          <div class=\"sortable-table__cell\">\r\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${data[0].url}\">\r\n          </div>\r\n        `;\r\n    }\r\n  },\r\n  {\r\n    id: 'title',\r\n    title: 'Name',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    title: 'Quantity',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'price',\r\n    title: 'Price',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'status',\r\n    title: 'Status',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template: data => {\r\n      return `<div class=\"sortable-table__cell\">\r\n          ${data > 0 ? 'Active' : 'Inactive'}\r\n        </div>`;\r\n    }\r\n  },\r\n];\r\n\r\nexport default header;\r\n","import RangePicker from '../../components/range-picker/index.js';\r\nimport SortableTable from '../../components/sortable-table/index.js';\r\nimport ColumnChart from '../../components/column-chart/index.js';\r\nimport header from './bestsellers-header.js';\r\n\r\nimport fetchJson from '../../utils/fetch-json.js';\r\n\r\nconst BACKEND_URL = `${process.env.BACKEND_URL}`; \r\n\r\nexport default class Page {\r\n    element;\r\n    subElements = {};\r\n    components = {};\r\n\r\n    async updateComponents(from, to) {\r\n     new URL(url, BACKEND_URL);\r\n        const data = await fetchJson( new URL(`api/dashboard/bestsellers`, BACKEND_URL) )  //(`${BACKEND_URL}/api/dashboard/bestsellers`\r\n        this.components.SortableTable.addRows(data);\r\n        this.components.ordersChart.update(from,to);\r\n        this.components.salesChart.update(from,to);\r\n        this.components.customsChart.update(from,to);\r\n    }\r\n\r\n   initComponents() {\r\n        const now = new Date(); \r\n        const to = new Date(); \r\n        const from = new Date( now.setMonth( now.getMonth() - 1 ) );\r\n        const rangePicker = new RangePicker( {from, to } );\r\n\r\n        const sortableTable = new SortableTable(header, {\r\n            url: `api/dashboard/bestsellers`,  \r\n            isSortlocaly: true\r\n        });\r\n\r\n        const ordersChart = new ColumnChart( {\r\n            url: `api/dashboard/orders`,\r\n            range: { from, to },\r\n            label: 'orders'\r\n        });\r\n        const salesChart = new ColumnChart( {\r\n            url: `api/dashboard/sales`,\r\n            range: { from, to },\r\n            label: 'orders'\r\n        });\r\n\r\n       const customersChart = new ColumnChart( {\r\n            url: `api/dashboard/customers`,\r\n            range: { from, to },\r\n            label: 'orders'\r\n        });\r\n\r\n        this.components = {\r\n            rangePicker,\r\n            sortableTable,\r\n            ordersChart,\r\n            salesChart,\r\n            customersChart\r\n        };\r\n\r\n       \r\n    }\r\n\r\n    randerComponents() {\r\n        Object.keys(this.components).forEach(component => {\r\n            const root = this.subElements[component];\r\n            const { element } = this.components[component];\r\n\r\n            root.append(element);\r\n        });\r\n    }\r\n\r\n    get template() {\r\n        return ` <div class=\"dashboard\">\r\n                   <div class=\"content__top-panel\">\r\n                     <h2 class=\"page_title\">Dashboard</h2>\r\n                     <!---  -->\r\n                     <div data-element=\"rangePicker\"></div>\r\n                   </div>\r\n                   <div data-element=\"ChartsRoot\" class=\"dashboard__charts\">\r\n                   <!---  -->\r\n                      <div data-element=\"ordersChart\" class=\"dashboard__chart_orders\"></div>\r\n                      <div data-element=\"salesChart\" class=\"dashboard__chart_sales\"></div>\r\n                      <div data-element=\"customersChart\" class=\"dashboard__chart_customers\"></div>\r\n                   </div>\r\n                   <h3 class=\"block-title\" >Best sales</h3>\r\n                   <div data-element=\"sortableTable\">\r\n                   <!---  -->\r\n                   </div>\r\n                </div>\r\n               `\r\n    }\r\n     render() {\r\n        \r\n        this.element = document.createElement('div'); // (*)\r\n        this.element.innerHTML = this.template;\r\n        this.element = this.element.firstElementChild;\r\n        this.subElements = this.getSubElements(this.element);\r\n\r\n        this.initComponents();\r\n        this.randerComponents() ;\r\n        this.initEventListener();\r\n        return this.element;\r\n     }\r\n\r\n     getSubElements(element) {\r\n         const elements = element.querySelectorAll('[data-element]');\r\n\r\n         return [...elements].reduce((accum, subElement) => {\r\n          accum[subElement.dataset.element] = subElement;\r\n\r\n          return accum;\r\n        }, {});\r\n     }\r\n\r\n     initEventListener() {\r\n         this.components.rangePicker.element.addEventListener('date-select', event => {  \r\n            const {from, to } = event.detail;\r\n            this.updateComponents(from, to);\r\n        });\r\n     }\r\n\r\n\r\n      remove () {\r\n        if (this.element) {\r\n            this.element.remove();\r\n        }\r\n     }\r\n\r\n      // NOTE: удаляем обработчики событий, если они есть\r\n      destroy() {\r\n        this.remove();\r\n        for(const component in this.components) {\r\n            this.components[component].destroy();\r\n        }\r\n        this.element = null;\r\n        this.subElements = {};\r\n      }\r\n\r\n\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\r\n// status >= 400 is an error\r\n// network error / json error are errors\r\n\r\nexport default async function(url, params) {\r\n  let response;\r\n\r\n  try {\r\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\r\n    response = await fetch(url.toString(), params);\r\n  } catch(err) {\r\n    throw new FetchError(response, \"Network error has occurred.\");\r\n  }\r\n\r\n  let body;\r\n\r\n  if (!response.ok) {\r\n    let errorText = response.statusText; // Not Found (for 404)\r\n\r\n    try {\r\n      body = await response.json();\r\n\r\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\r\n    } catch (error) { /* ignore failed body */ }\r\n\r\n    let message = `Error ${response.status}: ${errorText}`;\r\n\r\n    throw new FetchError(response, body, message);\r\n  }\r\n\r\n  try {\r\n    return await response.json();\r\n  } catch(err) {\r\n    throw new FetchError(response, null, err.message);\r\n  }\r\n}\r\n\r\nexport class FetchError extends Error {\r\n  name = \"FetchError\";\r\n\r\n  constructor(response, body, message) {\r\n    super(message);\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  if (event.reason instanceof FetchError) {\r\n    alert(event.reason.message);\r\n  }\r\n});\r\n\r\n","import fetchJson from \"../../utils/fetch-json.js\";\r\n\r\nconst BACKEND_URL = `${process.env.BACKEND_URL}`; \r\n\r\nexport default class SortableTable {\r\n  element;\r\n  subElements = {};\r\n  data = [];\r\n  loading = false;\r\n  step = 20;\r\n  start = 1;\r\n  end = this.start + this.step;\r\n\r\n  onWindowScroll = async () => {\r\n    const { bottom } = this.element.getBoundingClientRect();\r\n    const { id, order } = this.sorted;\r\n\r\n    if (bottom < document.documentElement.clientHeight && !this.loading && !this.isSortLocally) {\r\n      this.start = this.end;\r\n      this.end = this.start + this.step;\r\n\r\n      this.loading = true;\r\n\r\n      const data = await this.loadData(id, order, this.start, this.end);\r\n\r\n      this.updateBody(data);\r\n\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  onSortClick = event => {\r\n    const column = event.target.closest('[data-sortable=\"true\"]');\r\n    const toggleOrder = order => {\r\n      const orders = {\r\n        asc: 'desc',\r\n        desc: 'asc'\r\n      };\r\n\r\n      return orders[order];\r\n    };\r\n\r\n    if (column) {\r\n      const { id, order } = column.dataset;\r\n      const newOrder = toggleOrder(order);\r\n\r\n      this.sorted = {\r\n        id,\r\n        order: newOrder\r\n      };\r\n\r\n      column.dataset.order = newOrder;\r\n      column.append(this.subElements.arrow);\r\n\r\n      if (this.isSortLocally) {\r\n        this.sortLocally(id, newOrder);\r\n      } else {\r\n        this.sortOnServer(id, newOrder, 1, 1 + this.step);\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(headersConfig = [], {\r\n    url = '',\r\n    sorted = {\r\n      id: headersConfig.find(item => item.sortable).id,\r\n      order: 'asc'\r\n    },\r\n    isSortLocally = false,\r\n    step = 20,\r\n    start = 1,\r\n    end = start + step\r\n  } = {}) {\r\n\r\n    this.headersConfig = headersConfig;\r\n    this.url = new URL(url, BACKEND_URL);\r\n    this.sorted = sorted;\r\n    this.isSortLocally = isSortLocally;\r\n    this.step = step;\r\n    this.start = start;\r\n    this.end = end;\r\n\r\n    this.render();\r\n    this.update();\r\n  }\r\n\r\n  render() {\r\n    const wrapper = document.createElement('div');\r\n\r\n    wrapper.innerHTML = this.getTable([]);\r\n\r\n    const element = wrapper.firstElementChild;\r\n\r\n    this.element = element;\r\n    this.subElements = this.getSubElements(element);\r\n  }\r\n\r\n  async update () {\r\n    const {id, order} = this.sorted;\r\n    this.data = await this.loadData(id, order, this.start, this.end);\r\n    \r\n    this.renderRows([...this.data]);\r\n    this.initEventListeners();\r\n  }\r\n\r\n  addRows(data) {\r\n\r\n    this.subElements.body.innerHTML = this.getTableRows(data);\r\n  }\r\n\r\n  updateBody(data) {\r\n    const rows = document.createElement('div');\r\n\r\n    data = [...this.data, ...data];\r\n    rows.innerHTML = this.getTableRows(data);\r\n\r\n    this.subElements.body.append(...rows.childNodes);\r\n  }\r\n\r\n  //Request URL: https://course-js.javascript.ru/api/rest/orders?createdAt_gte=2021-05-14T10%3A35%3A51.666Z&createdAt_lte=2021-06-13T10%3A35%3A51.666Z&_sort=createdAt&_order=desc&_start=0&_end=30\r\n  async loadData(id, order, start = this.start, end = this.end) {\r\n    this.url.searchParams.set('_sort', id);\r\n    this.url.searchParams.set('_order', order);\r\n    this.url.searchParams.set('_start', start);\r\n    this.url.searchParams.set('_end', end);\r\n\r\n    this.element.classList.add('sortable-table_loading');\r\n\r\n    const data = await fetchJson(this.url); // n кол-во времени\r\n\r\n    this.element.classList.remove('sortable-table_loading');\r\n    return data;\r\n  }\r\n\r\n  getTableHeader() {\r\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\r\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\r\n    </div>`;\r\n  }\r\n\r\n  getHeaderRow({id, title, sortable}) {\r\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\r\n\r\n    return `\r\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\r\n        <span>${title}</span>\r\n        ${this.getHeaderSortingArrow(id)}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getHeaderSortingArrow(id) {\r\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\r\n\r\n    return isOrderExist\r\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\r\n          <span class=\"sort-arrow\"></span>\r\n        </span>`\r\n      : '';\r\n  }\r\n\r\n  getTableBody(data) {\r\n    return `\r\n      <div data-element=\"body\" class=\"sortable-table__body\">\r\n        ${this.getTableRows(data)}\r\n      </div>`;\r\n  }\r\n\r\n  getTableRows(data) {\r\n    return data.map(item => `\r\n      <div class=\"sortable-table__row\">\r\n        ${this.getTableRow(item, data)}\r\n      </div>`\r\n    ).join('');\r\n  }\r\n\r\n  getTableRow(item) {\r\n    const cells = this.headersConfig.map(({id, template}) => {\r\n      return {\r\n        id,\r\n        template\r\n      };\r\n    });\r\n\r\n    return cells.map(({id, template}) => {\r\n      return template\r\n        ? template(item[id])\r\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`;\r\n    }).join('');\r\n  }\r\n\r\n  getTable(data=[]) {\r\n    return `\r\n      <div class=\"sortable-table\">\r\n        ${this.getTableHeader()}\r\n        ${this.getTableBody(data)}\r\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line\"></div>\r\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\r\n          No products\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  initEventListeners() {\r\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\r\n\r\n    document.addEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  sortLocally(id, order) {\r\n    const sortedData = this.sortData(id, order);\r\n\r\n    this.subElements.body.innerHTML = this.getTableBody(sortedData);\r\n  }\r\n\r\n  async sortOnServer(id, order, start, end) {\r\n    const data = await this.loadData(id, order, start, end);\r\n\r\n    this.renderRows(data);\r\n  }\r\n\r\n  renderRows(data) {\r\n    if (data.length) {\r\n      this.element.classList.remove('sortable-table_empty');\r\n      this.addRows(data);\r\n    } else {\r\n      this.element.classList.add('sortable-table_empty');\r\n    }\r\n  }\r\n\r\n  sortData(id, order) {\r\n    const arr = [...this.data];\r\n    const column = this.headersConfig.find(item => item.id === id);\r\n    const {sortType, customSorting} = column;\r\n    const direction = order === 'asc' ? 1 : -1;\r\n\r\n    return arr.sort((a, b) => {\r\n      switch (sortType) {\r\n      case 'number':\r\n        return direction * (a[id] - b[id]);\r\n      case 'string':\r\n        return direction * a[id].localeCompare(b[id], 'ru');\r\n      case 'custom':\r\n        return direction * customSorting(a, b);\r\n      default:\r\n        return direction * (a[id] - b[id]);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  remove() {\r\n    this.element.remove();\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.subElements = {};\r\n    document.removeEventListener('scroll', this.onWindowScroll);\r\n  }\r\n}","export default class RangePicker {\r\n  element = null;\r\n  subElements = {};\r\n  selectingFrom = true;\r\n  selected = {\r\n    from: new Date(),\r\n    to: new Date()\r\n  };\r\n\r\n  static formatDate(date) {\r\n    return date.toLocaleString('ru', {dateStyle: 'short'});\r\n  }\r\n\r\n  onDocumentClick = event => {\r\n    const isOpen = this.element.classList.contains('rangepicker_open');\r\n    const isRangePicker = this.element.contains(event.target);\r\n\r\n    if (isOpen && !isRangePicker) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  constructor({from = new Date(), to = new Date()} = {}) {\r\n    this.showDateFrom = new Date(from);\r\n    this.selected = {from, to};\r\n\r\n    this.render();\r\n  }\r\n\r\n  get template() {\r\n    const from = RangePicker.formatDate(this.selected.from);\r\n    const to = RangePicker.formatDate(this.selected.to);\r\n\r\n    return `<div class=\"rangepicker\">\r\n      <div class=\"rangepicker__input\" data-element=\"input\">\r\n        <span data-element=\"from\">${from}</span> -\r\n        <span data-element=\"to\">${to}</span>\r\n      </div>\r\n      <div class=\"rangepicker__selector\" data-element=\"selector\"></div>\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    this.initEventListeners();\r\n  }\r\n  \r\n  getSubElements(element) {\r\n    const subElements = {};\r\n\r\n    for (const subElement of element.querySelectorAll('[data-element]')) {\r\n      subElements[subElement.dataset.element] = subElement;\r\n    }\r\n\r\n    return subElements;\r\n  }\r\n\r\n  initEventListeners() {\r\n    const {input, selector} = this.subElements;\r\n\r\n    document.addEventListener('click', this.onDocumentClick, true);\r\n    input.addEventListener('click', () => this.toggle());\r\n    selector.addEventListener('click', event => this.onSelectorClick(event));\r\n  }\r\n\r\n  toggle() {\r\n    this.element.classList.toggle('rangepicker_open');\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  onSelectorClick({target}) {\r\n    if (target.classList.contains('rangepicker__cell')) {\r\n      this.onRangePickerCellClick(target);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.element.classList.remove('rangepicker_open');\r\n  }\r\n\r\n  renderDateRangePicker() {\r\n    const showDate1 = new Date(this.showDateFrom);\r\n    const showDate2 = new Date(this.showDateFrom);\r\n    const { selector } = this.subElements;\r\n\r\n    showDate2.setMonth(showDate2.getMonth() + 1);\r\n\r\n    selector.innerHTML = `\r\n      <div class=\"rangepicker__selector-arrow\"></div>\r\n      <div class=\"rangepicker__selector-control-left\"></div>\r\n      <div class=\"rangepicker__selector-control-right\"></div>\r\n      ${this.renderCalendar(showDate1)}\r\n      ${this.renderCalendar(showDate2)}\r\n    `;\r\n\r\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\r\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\r\n\r\n    controlLeft.addEventListener('click', () => this.prev());\r\n    controlRight.addEventListener('click', () => this.next());\r\n\r\n    this.renderHighlight();\r\n  }\r\n\r\n  prev() {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  next() {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  renderHighlight() {\r\n    const { from, to } = this.selected;\r\n\r\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\r\n      const { value } = cell.dataset;\r\n      const cellDate = new Date(value);\r\n\r\n      cell.classList.remove('rangepicker__selected-from');\r\n      cell.classList.remove('rangepicker__selected-between');\r\n      cell.classList.remove('rangepicker__selected-to');\r\n\r\n      if (from && value === from.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-from');\r\n      } else if (to && value === to.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-to');\r\n      } else if (from && to && cellDate >= from && cellDate <= to) {\r\n        cell.classList.add('rangepicker__selected-between');\r\n      }\r\n    }\r\n\r\n    if (from) {\r\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\r\n      if (selectedFromElem) {\r\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\r\n      }\r\n    }\r\n\r\n    if (to) {\r\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\r\n      if (selectedToElem) {\r\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\r\n      }\r\n    }\r\n  }\r\n\r\n  renderCalendar(showDate) {\r\n    const date = new Date(showDate);\r\n    const getGridStartIndex = dayIndex => {\r\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\r\n      return index + 1;\r\n    };\r\n\r\n    date.setDate(1);\r\n\r\n    // text-transform: capitalize\r\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\r\n\r\n    let table = `<div class=\"rangepicker__calendar\">\r\n      <div class=\"rangepicker__month-indicator\">\r\n        <time datetime=${monthStr}>${monthStr}</time>\r\n      </div>\r\n      <div class=\"rangepicker__day-of-week\">\r\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\r\n      </div>\r\n      <div class=\"rangepicker__date-grid\">\r\n    `;\r\n\r\n    // first day of month starts after a space\r\n    // * * * 1 2 3 4\r\n    table += `\r\n      <button type=\"button\"\r\n        class=\"rangepicker__cell\"\r\n        data-value=\"${date.toISOString()}\"\r\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\r\n          ${date.getDate()}\r\n      </button>`;\r\n\r\n    date.setDate(2);\r\n\r\n    while (date.getMonth() === showDate.getMonth()) {\r\n      table += `\r\n        <button type=\"button\"\r\n          class=\"rangepicker__cell\"\r\n          data-value=\"${date.toISOString()}\">\r\n            ${date.getDate()}\r\n        </button>`;\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    // close the table\r\n    table += '</div></div>';\r\n\r\n    return table;\r\n  }\r\n\r\n  onRangePickerCellClick(target) {\r\n    const { value } = target.dataset;\r\n\r\n    if (value) {\r\n      const dateValue = new Date(value);\r\n\r\n      if (this.selectingFrom) {\r\n        this.selected = {\r\n          from: dateValue,\r\n          to: null\r\n        };\r\n        this.selectingFrom = false;\r\n        this.renderHighlight();\r\n      } else {\r\n        if (dateValue > this.selected.from) {\r\n          this.selected.to = dateValue;\r\n        } else {\r\n          this.selected.to = this.selected.from;\r\n          this.selected.from = dateValue;\r\n        }\r\n\r\n        this.selectingFrom = true;\r\n        this.renderHighlight();\r\n      }\r\n\r\n      if (this.selected.from && this.selected.to) {\r\n        this.dispatchEvent();\r\n        this.close();\r\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\r\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to);\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent() {\r\n    this.element.dispatchEvent(new CustomEvent('date-select', {\r\n      bubbles: true,\r\n      detail: this.selected\r\n    }));\r\n  }\r\n\r\n  remove() {\r\n    if (this.element) {\r\n        this.element.remove();\r\n    }\r\n    // TODO: Warning! To remove listener MUST be passes the same event phase\r\n    document.removeEventListener('click', this.onDocumentClick, true);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.element = null;\r\n    this.subElements = {};\r\n    this.selectingFrom = true;\r\n    this.selected = {\r\n      from: new Date(),\r\n      to: new Date()\r\n    };\r\n\r\n    return this;\r\n  }\r\n}\r\n"],"sourceRoot":""}